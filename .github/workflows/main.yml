name: Main CI/CD for Foodgram

on:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.12
          cache: 'pip'
      - name: Install depedenciees lint
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements/requirements.lint.txt
      - name: Run linter
        run: python -m flake8 backend/

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push backend to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: backend/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
            ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:v1.0
      - name: Push frontend Docker image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: frontend/
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v1.0   
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Copy docker-compose.production.yml via ssh
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/docker-compose.production.yml"
          target: "foodgram"
      - name: Copy nginx.production.yml via ssh
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "infra/nginx.production.conf"
          target: "foodgram"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram/infra
            rm -f .env
            touch .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo DEBUG=${{ secrets.DEBUG }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            
            sudo docker compose -f docker-compose.production.yml -v down
            sudo docker rm -f foodgram_backend foodgram_frontend foodgram_nginx || true
            sudo docker compose -f docker-compose.production.yml up -d --build

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
